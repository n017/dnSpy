<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllFiles" xml:space="preserve">
    <value>All files</value>
  </data>
  <data name="AnErrorOccurred" xml:space="preserve">
    <value>An error occurred:

{0}</value>
  </data>
  <data name="Button_Cancel" xml:space="preserve">
    <value>_Cancel</value>
  </data>
  <data name="Button_DefaultSettings" xml:space="preserve">
    <value>_Default Settings</value>
  </data>
  <data name="Button_OK" xml:space="preserve">
    <value>_OK</value>
  </data>
  <data name="Button_RestoreSettings" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="BytesPerLineCommand" xml:space="preserve">
    <value>Bytes per Line</value>
  </data>
  <data name="ClearByteCommand" xml:space="preserve">
    <value>Clear Byte</value>
  </data>
  <data name="ClearSelectedBytesCommand" xml:space="preserve">
    <value>Clear Selected Bytes</value>
  </data>
  <data name="ClearSelectionKey" xml:space="preserve">
    <value>Del</value>
    <comment>the delete key</comment>
  </data>
  <data name="CopyCommand" xml:space="preserve">
    <value>Cop_y</value>
  </data>
  <data name="CopyCSharpArrayCommand" xml:space="preserve">
    <value>Copy C# Array</value>
  </data>
  <data name="CopyCSharpArrayKey" xml:space="preserve">
    <value>Ctrl+Shift+P</value>
  </data>
  <data name="CopyKey" xml:space="preserve">
    <value>Ctrl+C</value>
  </data>
  <data name="CopyOffsetCommand" xml:space="preserve">
    <value>Copy Offset</value>
  </data>
  <data name="CopyOffsetKey" xml:space="preserve">
    <value>Ctrl+Alt+O</value>
  </data>
  <data name="CopyUIContentsCommand" xml:space="preserve">
    <value>Copy UI Contents</value>
  </data>
  <data name="CopyUIContentsKey" xml:space="preserve">
    <value>Ctrl+Shift+C</value>
  </data>
  <data name="CopyUnicodeStringCommand" xml:space="preserve">
    <value>Copy Unicode String</value>
  </data>
  <data name="CopyUnicodeStringKey" xml:space="preserve">
    <value>Ctrl+Shift+U</value>
  </data>
  <data name="CopyUTF8StringCommand" xml:space="preserve">
    <value>Copy UTF-8 String</value>
  </data>
  <data name="CopyUTF8StringKey" xml:space="preserve">
    <value>Ctrl+Shift+8</value>
  </data>
  <data name="CopyVBArrayCommand" xml:space="preserve">
    <value>Copy VB Array</value>
  </data>
  <data name="CopyVBArrayKey" xml:space="preserve">
    <value>Ctrl+Shift+B</value>
  </data>
  <data name="CouldNotConvert" xml:space="preserve">
    <value>Could not convert '{0}'</value>
  </data>
  <data name="CouldNotConvertFromString" xml:space="preserve">
    <value>Could not convert it from a string: {0}</value>
  </data>
  <data name="CouldNotDeserializeData" xml:space="preserve">
    <value>Could not deserialize data: {0}</value>
  </data>
  <data name="Files_DotNetExecutables" xml:space="preserve">
    <value>.NET Executables</value>
  </data>
  <data name="Files_DotNetNetModules" xml:space="preserve">
    <value>.NET NetModules</value>
  </data>
  <data name="Files_Executables" xml:space="preserve">
    <value>Executables</value>
  </data>
  <data name="Files_Images" xml:space="preserve">
    <value>Images</value>
  </data>
  <data name="Files_StrongNameKeyFiles" xml:space="preserve">
    <value>Strong Name Key Files</value>
  </data>
  <data name="FillSelectionCommand" xml:space="preserve">
    <value>Fill Selection with Byte...</value>
  </data>
  <data name="FillSelection_Label" xml:space="preserve">
    <value>_Byte</value>
  </data>
  <data name="FillSelection_Title" xml:space="preserve">
    <value>Enter Value</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="GoToAddressCommand" xml:space="preserve">
    <value>Go to Address...</value>
  </data>
  <data name="GoToOffsetCommand" xml:space="preserve">
    <value>Go to Offset...</value>
  </data>
  <data name="GoToOffsetKey" xml:space="preserve">
    <value>Ctrl+G</value>
  </data>
  <data name="GoToOffset_Address_Label" xml:space="preserve">
    <value>_Address</value>
  </data>
  <data name="GoToOffset_Offset_Label" xml:space="preserve">
    <value>O_ffset</value>
  </data>
  <data name="GoToOffset_Title" xml:space="preserve">
    <value>Go to Offset</value>
  </data>
  <data name="GoToOffset_Title_Address" xml:space="preserve">
    <value>Go to Address</value>
  </data>
  <data name="HexEditorAppDlgTitle" xml:space="preserve">
    <value>Hex Editor</value>
  </data>
  <data name="HexEditorCharacterEncodingCommand" xml:space="preserve">
    <value>Encoding</value>
  </data>
  <data name="HexEditorSaveSelectionCommand" xml:space="preserve">
    <value>Save Se_lection...</value>
  </data>
  <data name="HexEditorSaveSelectionKey" xml:space="preserve">
    <value>Ctrl+Alt+S</value>
  </data>
  <data name="HexEditorSaveSelection_Title" xml:space="preserve">
    <value>Save Selection 0x{0:X}-0x{1:X}</value>
  </data>
  <data name="HexEditorSelectCommand" xml:space="preserve">
    <value>Select...</value>
  </data>
  <data name="HexEditorSelectKey" xml:space="preserve">
    <value>Ctrl+L</value>
  </data>
  <data name="HexEditorSelect_End" xml:space="preserve">
    <value>_End</value>
  </data>
  <data name="HexEditorSelect_Start" xml:space="preserve">
    <value>_Start</value>
  </data>
  <data name="HexEditorSelect_Title" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="HexEditorSettingsCommand" xml:space="preserve">
    <value>Settings...</value>
  </data>
  <data name="HexEditorSettings_OtherOptions" xml:space="preserve">
    <value>Other Options</value>
  </data>
  <data name="HexEditorShowAsciiCommand" xml:space="preserve">
    <value>Show ASCII</value>
  </data>
  <data name="HexEditor_BytesPerLine_16" xml:space="preserve">
    <value>_16 Bytes</value>
  </data>
  <data name="HexEditor_BytesPerLine_32" xml:space="preserve">
    <value>_32 Bytes</value>
  </data>
  <data name="HexEditor_BytesPerLine_48" xml:space="preserve">
    <value>_48 Bytes</value>
  </data>
  <data name="HexEditor_BytesPerLine_64" xml:space="preserve">
    <value>_64 Bytes</value>
  </data>
  <data name="HexEditor_BytesPerLine_8" xml:space="preserve">
    <value>_8 Bytes</value>
  </data>
  <data name="HexEditor_BytesPerLine_FitToWidth" xml:space="preserve">
    <value>_Fit to Width</value>
  </data>
  <data name="HexEditor_CharacterEncoding_ANSI" xml:space="preserve">
    <value>_ANSI</value>
  </data>
  <data name="HexEditor_CharacterEncoding_ANSI_2" xml:space="preserve">
    <value>ANSI</value>
  </data>
  <data name="HexEditor_CharacterEncoding_ASCII" xml:space="preserve">
    <value>A_SCII</value>
  </data>
  <data name="HexEditor_CharacterEncoding_ASCII_2" xml:space="preserve">
    <value>ASCII</value>
  </data>
  <data name="HexEditor_CharacterEncoding_BIG_ENDIAN_UNICODE" xml:space="preserve">
    <value>_BE Unicode</value>
  </data>
  <data name="HexEditor_CharacterEncoding_BIG_ENDIAN_UNICODE_2" xml:space="preserve">
    <value>BE Unicode</value>
  </data>
  <data name="HexEditor_CharacterEncoding_UNICODE" xml:space="preserve">
    <value>_Unicode</value>
  </data>
  <data name="HexEditor_CharacterEncoding_UNICODE_2" xml:space="preserve">
    <value>Unicode</value>
  </data>
  <data name="HexEditor_CharacterEncoding_UTF32" xml:space="preserve">
    <value>UTF_32</value>
  </data>
  <data name="HexEditor_CharacterEncoding_UTF32_2" xml:space="preserve">
    <value>UTF-32</value>
  </data>
  <data name="HexEditor_CharacterEncoding_UTF7" xml:space="preserve">
    <value>UTF_7</value>
  </data>
  <data name="HexEditor_CharacterEncoding_UTF7_2" xml:space="preserve">
    <value>UTF-7</value>
  </data>
  <data name="HexEditor_CharacterEncoding_UTF8" xml:space="preserve">
    <value>UTF_8</value>
  </data>
  <data name="HexEditor_CharacterEncoding_UTF8_2" xml:space="preserve">
    <value>UTF-8</value>
  </data>
  <data name="HexEditor_Default" xml:space="preserve">
    <value>_Default</value>
  </data>
  <data name="HexEditor_Default2" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="InvalidBoolean" xml:space="preserve">
    <value>Value must be a boolean value (True or False)</value>
  </data>
  <data name="InvalidChar" xml:space="preserve">
    <value>A character must be enclosed in single quotes (')</value>
  </data>
  <data name="InvalidDateTime" xml:space="preserve">
    <value>Value must be a DateTime</value>
  </data>
  <data name="InvalidDecimal" xml:space="preserve">
    <value>Value must be a Decimal</value>
  </data>
  <data name="InvalidDouble" xml:space="preserve">
    <value>Value must be a 64-bit floating point number</value>
  </data>
  <data name="InvalidEscapeSequence" xml:space="preserve">
    <value>Unknown character escape sequence: \{0}</value>
  </data>
  <data name="InvalidEscapeSequence2" xml:space="preserve">
    <value>Unknown string escape sequence: \{0}</value>
  </data>
  <data name="InvalidGuid" xml:space="preserve">
    <value>Invalid GUID</value>
  </data>
  <data name="InvalidHexCharacter" xml:space="preserve">
    <value>A hex string must contain only hex digits: 0-9 and A-F</value>
  </data>
  <data name="InvalidHexStringSize" xml:space="preserve">
    <value>A hex string must contain an even number of hex digits</value>
  </data>
  <data name="InvalidInteger1" xml:space="preserve">
    <value>The value is not a hexadecimal or decimal integer</value>
  </data>
  <data name="InvalidInteger2" xml:space="preserve">
    <value>The value is too small</value>
  </data>
  <data name="InvalidInteger3" xml:space="preserve">
    <value>The value is too big</value>
  </data>
  <data name="InvalidInteger4" xml:space="preserve">
    <value>Value must be between {0} and {1} (0x{1:X}) inclusive</value>
  </data>
  <data name="InvalidInteger5" xml:space="preserve">
    <value>Value must be between {0} ({2}0x{0:X}) and {1} (0x{1:X}) inclusive</value>
  </data>
  <data name="InvalidListValue" xml:space="preserve">
    <value>Value in list can't be empty</value>
  </data>
  <data name="InvalidListValue2" xml:space="preserve">
    <value>List elements must be separated with commas</value>
  </data>
  <data name="InvalidSingle" xml:space="preserve">
    <value>Value must be a 32-bit floating point number</value>
  </data>
  <data name="InvalidString1" xml:space="preserve">
    <value>A string must contain the value 'null' or must be enclosed in double quotes (")</value>
  </data>
  <data name="InvalidString2" xml:space="preserve">
    <value>A string must be enclosed in double quotes (")</value>
  </data>
  <data name="InvalidTimeSpan" xml:space="preserve">
    <value>Value must be a TimeSpan</value>
  </data>
  <data name="InvalidUnsignedInteger1" xml:space="preserve">
    <value>Only non-negative integers are allowed</value>
  </data>
  <data name="InvalidUnsignedInteger2" xml:space="preserve">
    <value>The value is not an unsigned hexadecimal or decimal integer</value>
  </data>
  <data name="InvalidUnsignedInteger3" xml:space="preserve">
    <value>Value must be between {0} and {1} (0x{1:X}) inclusive</value>
  </data>
  <data name="InvalidUnsignedInteger4" xml:space="preserve">
    <value>Value must be between {0} (0x{0:X}) and {1} (0x{1:X}) inclusive</value>
  </data>
  <data name="LocalHexSettings_BaseOffset" xml:space="preserve">
    <value>_Base Offset</value>
  </data>
  <data name="LocalHexSettings_BaseOffset_ToolTip" xml:space="preserve">
    <value>This value is added to start offset before it's shown on the screen</value>
  </data>
  <data name="LocalHexSettings_ByteGroupSize" xml:space="preserve">
    <value>Byte _Group Size</value>
  </data>
  <data name="LocalHexSettings_BytesPerLine" xml:space="preserve">
    <value>B_ytes per Line</value>
  </data>
  <data name="LocalHexSettings_EndOffset" xml:space="preserve">
    <value>_End Offset</value>
  </data>
  <data name="LocalHexSettings_LowerCaseHex" xml:space="preserve">
    <value>_Lower Case Hex</value>
  </data>
  <data name="LocalHexSettings_OffsetBitSize" xml:space="preserve">
    <value>Offset Bi_t Size</value>
  </data>
  <data name="LocalHexSettings_ShowASCII" xml:space="preserve">
    <value>Sho_w ASCII</value>
  </data>
  <data name="LocalHexSettings_StartOffset" xml:space="preserve">
    <value>_Start Offset</value>
  </data>
  <data name="LocalHexSettings_Title" xml:space="preserve">
    <value>Local Hex Editor Settings</value>
  </data>
  <data name="LocalHexSettings_UseHexPrefix" xml:space="preserve">
    <value>_Use Hex Prefix (offset)</value>
  </data>
  <data name="LocalHexSettings_UseRelOffsets" xml:space="preserve">
    <value>Use _Relative Offsets</value>
  </data>
  <data name="LocalHexSettings_UseRelOffsets_ToolTip" xml:space="preserve">
    <value>All offsets are relative to the start offset</value>
  </data>
  <data name="LowerCaseHexCommand" xml:space="preserve">
    <value>Lower Case Hex</value>
  </data>
  <data name="NewDataNotImageList" xml:space="preserve">
    <value>The new data is not an image list.</value>
  </data>
  <data name="NoTypeConverter" xml:space="preserve">
    <value>{0} does not have a TypeConverter and can't be converted from a string.</value>
  </data>
  <data name="NumberOfBytes" xml:space="preserve">
    <value>{0} bytes</value>
  </data>
  <data name="NumberOfBytesAndType" xml:space="preserve">
    <value>{0} bytes, Type = {1}</value>
  </data>
  <data name="PasteCommand" xml:space="preserve">
    <value>_Paste</value>
  </data>
  <data name="PasteDotNetMetaDataBlobCommand" xml:space="preserve">
    <value>_Paste (#Blob Data)</value>
  </data>
  <data name="PasteDotNetMetaDataBlobKey" xml:space="preserve">
    <value>Ctrl+B</value>
  </data>
  <data name="PasteKey" xml:space="preserve">
    <value>Ctrl+V</value>
  </data>
  <data name="PasteUnicodeCommand" xml:space="preserve">
    <value>_Paste (Unicode)</value>
  </data>
  <data name="PasteUnicodeKey" xml:space="preserve">
    <value>Ctrl+U</value>
  </data>
  <data name="PasteUTF8Command" xml:space="preserve">
    <value>_Paste (UTF-8)</value>
  </data>
  <data name="PasteUTF8Key" xml:space="preserve">
    <value>Ctrl+8</value>
  </data>
  <data name="ResourceTypeCantBeChanged" xml:space="preserve">
    <value>Resource type can't be changed</value>
  </data>
  <data name="SaveResource" xml:space="preserve">
    <value>Save Resource</value>
  </data>
  <data name="SaveResources" xml:space="preserve">
    <value>Save Resources</value>
  </data>
  <data name="ShowAllBytesCommand" xml:space="preserve">
    <value>Show All Bytes</value>
  </data>
  <data name="ShowAllBytesKey" xml:space="preserve">
    <value>Ctrl+Shift+D</value>
  </data>
  <data name="ShowOnlySelectedBytesCommand" xml:space="preserve">
    <value>Show Only Selected Bytes</value>
  </data>
  <data name="ShowOnlySelectedBytesKey" xml:space="preserve">
    <value>Ctrl+D</value>
  </data>
  <data name="UseHexPrefixCommand" xml:space="preserve">
    <value>Use 0x Prefix (offset)</value>
  </data>
  <data name="ValueMustBeType" xml:space="preserve">
    <value>Value must be type {0}.
Error: {1}</value>
  </data>
  <data name="Window_Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Window_Maximize" xml:space="preserve">
    <value>Maximize</value>
  </data>
  <data name="Window_Minimize" xml:space="preserve">
    <value>Minimize</value>
  </data>
  <data name="Window_Restore" xml:space="preserve">
    <value>Restore Down</value>
  </data>
  <data name="LocalHexSettings_Encoding" xml:space="preserve">
    <value>E_ncoding</value>
  </data>
  <data name="SearchPanel_ErrorText" xml:space="preserve">
    <value>Error:</value>
  </data>
  <data name="SearchPanel_FindNextText" xml:space="preserve">
    <value>Find next (F3)</value>
  </data>
  <data name="SearchPanel_FindPreviousText" xml:space="preserve">
    <value>Find previous (Shift+F3)</value>
  </data>
  <data name="SearchPanel_MatchCaseText" xml:space="preserve">
    <value>Match case</value>
  </data>
  <data name="SearchPanel_MatchWholeWordsText" xml:space="preserve">
    <value>Match whole words</value>
  </data>
  <data name="SearchPanel_NoMatchesFoundText" xml:space="preserve">
    <value>No matches found!</value>
  </data>
  <data name="SearchPanel_UseRegexText" xml:space="preserve">
    <value>Use regular expressions</value>
  </data>
</root>